#!/usr/bin/env python3

# Copyright 2021 Kungliga Tekniska h√∂gskolan

# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:

# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

from __future__ import print_function, unicode_literals

import sys
import psycopg2
import pathlib
from time import sleep
import datetime

def pgstartbak_main(command, *args):
    if command == "restorepoint":
        connstring = args[0]
        conn = psycopg2.connect(connstring)
        cur = conn.cursor()

        timestamp = datetime.datetime.now().strftime("%Y%m%d%H%M%S")
        label = f"restorepoint-{timestamp}" if len(args) == 1 else f"restorepoint-{timestamp}-{args[1]}"

        cur.execute(f"SELECT pg_create_restore_point(%s);", (label,))
        res = cur.fetchone()

        cur.execute(f"SELECT pg_switch_wal();")
        res = cur.fetchone()

        print(label)

if __name__ == '__main__':
    pgstartbak_main(*sys.argv[1:])

